[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "programming_bitcoin"
description = "project description"
version = "0.1.0"

authors = [
    {name = "the-citto", email = "my.email@domain.com"}
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: MIT",
    "Operating System :: Linux"
]

dynamic = ["dependencies", "optional-dependencies"]

[project.scripts]
programming_bitcoin = "programming_bitcoin:__main__.main"

[project.gui-scripts]


[tool.setuptools]
package-dir = {"" = "python"}

[tool.setuptools.package-data]
programming_bitcoin = ["py.typed"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements/requirements.txt"] }
optional-dependencies.tests = { file = ["requirements/requirements-tests.txt"]}
optional-dependencies.dev = { file = ["requirements/requirements-dev.txt"]}

[tool.setuptools.packages.find]
where = ["python"]


[tool.pytest.ini_options]
addopts = "--no-header -vv --tb=no --cov"
testpaths = ["tests"]


[tool.coverage.run]
omit = ["tests/*"]


[tool.mypy]
# mypy_path = "/usr/bin/mypy"
strict = true
python_executable = ".venv/bin/python"
exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "_old",
    "_tmp",
]

# [[tool.mypy.overrides]]
# module = "tests.*"
# ignore_missing_imports = true
# ignore_errors = true


[tool.pyright]
venvPath = "."
venv = ".venv"

# typeCheckingMode = "off"
enableReachabilityAnalysis = false

include = [
    "python",
    "tests",
]
exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "_old",
    "_tmp",
]


[tool.ruff]
exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "_old",
    "_tmp",
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    "ERA001", # Found commented-out code
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "D102", # Missing docstring in public method
    "PLR2004", # Magic value used in comparison
    "S101",  # Use of `assert` detected
]

[tool.ruff.isort]
known-first-party = ["programming_bitcoin"]
lines-after-imports = 3


